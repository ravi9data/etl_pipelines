WITH a AS (
SELECT customer_id, 
		subscription_id,
		start_date,
		first_timestamp_payment_successful,
		count(subscription_id) OVER(partition BY customer_id) AS subs_per_cust,
		CASE WHEN first_timestamp_payment_successful <start_date THEN 1 ELSE 0 END AS activated_users_old,
		sum (CASE WHEN first_timestamp_payment_successful IS NOT NULL  THEN 1 ELSE 0 END ) OVER (PARTITION BY customer_id )AS status
	WHERE status='ACTIVE' 
	and first_card_created_date IS NOT null)
,b AS (
SELECT 
	customer_id,
	subscription_id,
	start_date ,
	first_timestamp_payment_successful,
	CASE WHEN subs_per_cust>=6 THEN '6+' ELSE subs_per_cust::text END AS subs_per_cust,
	activated_users_old,
	CASE WHEN status > 0 THEN TRUE ELSE FALSE END AS activated_user
FROM a)
SELECT 
	subs_per_cust ,
	count(DISTINCT customer_id) customer_count,
	activated_user 
FROM b
	GROUP BY 1,3
UNION ALL 
SELECT 
	0::text AS subs_per_cust,
	count(DISTINCT customer_id) AS customer_count,
	FALSE AS activated_user
WHERE customer_id NOT IN 
	(SELECT
		DISTINCT 
		customer_id 
	WHERE status ='ACTIVE')
AND total_cards >0
WITH NO SCHEMA BINDING;


