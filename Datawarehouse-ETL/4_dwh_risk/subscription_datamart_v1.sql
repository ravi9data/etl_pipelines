drop table if exists dm_risk.subscription_datamart_v1;
create table dm_risk.subscription_datamart_v1 as
with subscription as
(
select
s.subscription_id ,
s.subscription_sf_id ,
s.order_created_date ,
s.created_date ,
s.updated_date ,
s.start_date ,
s.rank_subscriptions ,
s.first_subscription_start_date ,
s.subscriptions_per_customer ,
s.customer_id ,
s.customer_type ,
s.customer_acquisition_cohort ,
s.subscription_limit ,
s.order_id ,
s.store_id ,
s.store_name ,
s.store_label ,
s.store_type ,
s.store_number ,
s.account_name ,
s.status ,
s.variant_sku ,
s.allocation_status ,
s.allocated_assets ,
s.delivered_assets ,
s.returned_packages ,
s.returned_assets ,
s.outstanding_assets ,
s.outstanding_asset_value ,
s.outstanding_residual_asset_value ,
s.first_asset_delivery_date ,
s.subscription_plan ,
s.rental_period ,
s.subscription_value ,
(s.committed_sub_value + s.additional_committed_sub_value) as committed_sub_value ,
s.next_due_date ,
s.commited_sub_revenue_future ,
s.currency ,
s.subscription_duration ,
s.effective_duration ,
s.outstanding_duration ,
s.months_required_to_own ,
s.max_payment_number ,
s.payment_count ,
s.paid_subscriptions ,
s.last_valid_payment_category ,
s.dpd ,
s.subscription_revenue_due ,
s.subscription_revenue_paid ,
s.outstanding_subscription_revenue ,
s.subscription_revenue_refunded ,
s.subscription_revenue_chargeback ,
s.net_subscription_revenue_paid ,
s.cancellation_date ,
s.cancellation_note ,
s.cancellation_reason ,
s.cancellation_reason_new ,
s.cancellation_reason_churn ,
s.payment_method ,
s.debt_collection_handover_date ,
s.dc_status ,
s.result_debt_collection_contact ,
s.avg_asset_purchase_price ,
s.product_sku ,
s.category_name ,
s.subcategory_name ,
s.brand ,
s.new_recurring ,
s.retention_group ,
s.minimum_cancellation_date ,
s.minimum_term_months ,
s.exposure_to_default ,
s.asset_recirculation_status ,
s.store_short ,
s.country_name ,
s.store_commercial,
case when outstanding_assets = 0 and status= 'CANCELLED' and (dc_status is null or dc_status = 'NO DC' or debt_collection_handover_date is null) then 1 else 0 end as return_product_completed,
case when dc_status <> 'NO DC' or dc_status is not null or debt_collection_handover_date is not null then 1 else 0 end as return_product_failed
FROM
master.subscription s
)
select * from subscription
;
