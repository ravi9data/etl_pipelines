drop table if exists ods_data_sensitive.intercom_first_conversation;
	create table ods_data_sensitive.intercom_first_conversation as
    with format as (
    select fc.id,
    "type",
    (timestamptz 'epoch' + created_at::int * interval '1 second') as created_at,
    (timestamptz 'epoch' + updated_at ::int * interval '1 second') as updated_at,
    (timestamptz 'epoch' + waiting_since ::int * interval '1 second') as waiting_since,
    (timestamptz 'epoch' + snoozed_until ::int * interval '1 second') as snoozed_until,
    JSON_EXTRACT_PATH_text(json_extract_array_element_text(JSON_EXTRACT_PATH_text(contacts,'contacts'),0),'id') as intercom_customer_id,
    delivered_as,
  	subject,
	body,
    JSON_EXTRACT_PATH_text("author", 'type') as author_type,
    JSON_EXTRACT_PATH_text("author", 'id') as author_id,
    JSON_EXTRACT_PATH_text("author", 'name') as author_name,
    (timestamptz 'epoch' + (JSON_EXTRACT_PATH_text("first_contact_reply", 'created_at'))::int * interval '1 second') as fc_reply_at,
    JSON_EXTRACT_PATH_text("first_contact_reply" ,'type') as fc_reply_type,
    JSON_EXTRACT_PATH_text("first_contact_reply" ,'url') as fc_url,
    "open",
    state,
    read,
    JSON_EXTRACT_PATH_text("assignee" ,'type') as assignee_type,
    JSON_EXTRACT_PATH_text("assignee" ,'id') as assignee_id,
    nullif(JSON_EXTRACT_PATH_text("statistics" ,'time_to_assignment'), '')::int  as time_to_assignment,
    nullif(JSON_EXTRACT_PATH_text("statistics" ,'time_to_admin_reply'), '')::int/ 60  as time_to_admin_reply,
    nullif(JSON_EXTRACT_PATH_text("statistics" ,'time_to_first_close'), '')::int/ 60 as time_to_first_close,
    nullif(JSON_EXTRACT_PATH_text("statistics" ,'time_to_last_close'), '')::int/ 60 as time_to_last_close,
    nullif(JSON_EXTRACT_PATH_text("statistics" ,'median_time_to_reply'), '')::int/ 60 as median_time_to_reply,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'first_assignment_at'), '')::int * interval '1 second') as first_assignment_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'first_admin_reply_at'), '')::int * interval '1 second') as first_admin_reply_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'first_close_at'), '')::int * interval '1 second') as first_close_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'last_assignment_at'), '')::int * interval '1 second') as last_assignment_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'last_assignment_admin_reply_at'), '')::int * interval '1 second') as last_assignment_admin_reply_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'last_contact_reply_at'), '')::int * interval '1 second') as last_contact_reply_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'last_admin_reply_at'), '')::int * interval '1 second') as last_admin_reply_at,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("statistics", 'last_close_at'), '')::int * interval '1 second') as last_close_at,
    JSON_EXTRACT_PATH_text("statistics" ,'last_closed_by_id') as last_closed_by_id,
    JSON_EXTRACT_PATH_text("statistics" ,'count_reopens') as count_reopens,
    JSON_EXTRACT_PATH_text("statistics" ,'count_assignments') as count_assignments,
    JSON_EXTRACT_PATH_text("statistics" ,'count_conversation_parts') as count_conversation_parts,
    nullif(JSON_EXTRACT_PATH_text("conversation_rating" ,'rating'), '')::int as conversation_rating,
    JSON_EXTRACT_PATH_text("conversation_rating" ,'remark') as conversation_remark,
    (timestamptz 'epoch' + nullif(JSON_EXTRACT_PATH_text("conversation_rating", 'created_at'), ' ')::int * interval '1 second') as conversation_rating_created_at
from stg_external_apis.intercom_conversations_first_contact fc
where id is not null and created_at is not null
order by 3 desc)
select 
	id,
	"type",
	created_at::timestamp AS created_at,
	updated_at::timestamp AS updated_at,
	waiting_since::timestamp AS waiting_since,
	snoozed_until::timestamp AS snoozed_until,
	intercom_customer_id,
	delivered_as,
	subject,
	body,
	author_type,
	author_id,
	author_name,
	fc_reply_at::timestamp AS fc_reply_at,
	fc_reply_type,
	fc_url,
	"open",
	state,
	read,
	assignee_type,
	assignee_id,
	time_to_assignment,
	time_to_admin_reply,
	time_to_first_close,
	time_to_last_close,
	median_time_to_reply,
	first_assignment_at::timestamp AS first_assignment_at,
	first_admin_reply_at::timestamp AS first_admin_reply_at,
	first_close_at::timestamp AS first_close_at,
	last_assignment_at::timestamp AS last_assignment_at,
	last_assignment_admin_reply_at::timestamp AS last_assignment_admin_reply_at,
	last_contact_reply_at::timestamp AS last_contact_reply_at,
	last_admin_reply_at::timestamp AS last_admin_reply_at,
	last_close_at::timestamp AS last_close_at,
	last_closed_by_id,
	count_reopens,
	count_assignments,
	count_conversation_parts,
	conversation_rating,
	conversation_remark,
	conversation_rating_created_at::timestamp AS conversation_rating_created_at
from format;

GRANT SELECT ON ods_data_sensitive.intercom_first_conversation TO tableau;
